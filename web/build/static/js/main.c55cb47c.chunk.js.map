{"version":3,"sources":["typings/inventory.ts","helpers/index.ts","store/inventory.ts","reducers/stackSlots.ts","reducers/swapSlots.ts","reducers/setupInventory.ts","reducers/moveSlots.ts","reducers/refreshSlots.ts","store/index.ts","utils/misc.ts","hooks/useNuiEvent.ts","components/utils/DragPreview.tsx","components/utils/Notifications.tsx","utils/fetchNui.ts","components/utils/ProgressBar.tsx","hooks/useExitListener.ts","components/utils/KeyboardInput.tsx","hooks/useKeyPress.ts","store/items.ts","components/utils/WeightBar.tsx","thunks/validateItems.ts","dnd/onDrop.ts","thunks/buyItem.ts","dnd/onUse.ts","components/inventory/InventorySlot.tsx","dnd/onBuy.ts","store/locale.ts","dnd/onGive.ts","utils/setClipboard.ts","components/inventory/InventoryContext.tsx","components/inventory/InventoryGrid.tsx","components/utils/Fade.tsx","components/inventory/InventoryControl.tsx","components/inventory/InventoryHotbar.tsx","components/inventory/index.tsx","components/App.tsx","components/utils/ItemNotifications.tsx","index.tsx"],"names":["InventoryType","isSlotWithItem","slot","strict","undefined","name","weight","count","getTargetInventory","state","sourceType","targetType","sourceInventory","PLAYER","leftInventory","rightInventory","targetInventory","itemDurability","metadata","curTime","durability","degrade","inventorySlice","createSlice","initialState","id","type","slots","maxWeight","items","itemAmount","shiftPressed","isBusy","reducers","stackSlots","action","payload","fromSlot","fromType","toSlot","toType","pieceWeight","SHOP","swapSlots","Math","floor","Date","now","setupInventory","Array","from","_","index","item","Object","values","find","moveSlots","fromItem","refreshSlots","isArray","filter","data","forEach","inventory","setItemAmount","setShiftPressed","setContainerWeight","container","extraReducers","builder","addMatcher","isPending","history","current","isFulfilled","isRejected","actions","selectLeftInventory","selectRightInventory","selectItemAmount","selectIsBusy","store","configureStore","reducer","inventoryReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","isEnvBrowser","window","invokeNative","noop","useNuiEvent","handler","savedHandler","useRef","useEffect","eventListener","event","eventAction","addEventListener","removeEventListener","subtract","a","b","x","y","calculatePointerPosition","monitor","childRef","offset","getClientOffset","getBoundingClientRect","client","getInitialClientOffset","source","getInitialSourceClientOffset","calculateParentOffset","bb","middle","width","height","DragPreview","element","useDragLayer","getItem","currentOffset","isDragging","ref","className","style","transform","backgroundImage","process","image","Notify","toast","text","duration","position","backgroundColor","Notifications","toastOptions","padding","borderRadius","color","resourceName","GetParentResourceName","fetchNui","eventName","fetch","method","headers","body","JSON","stringify","resp","json","respFormatted","Error","ProgressBar","useState","setDuration","isVisible","setVisible","isCancelled","setCancelled","setText","setTimeout","animationDuration","onAnimationEnd","LISTENED_KEYS","useExitListener","visibleSetter","setterRef","keyHandler","e","includes","code","KeyboardInput","header","setHeader","inputRows","setInputRows","input","setInput","rows","handleSubmit","preventDefault","length","visibility","map","row","onSubmit","defaultValue","onChange","prevInput","target","value","handleChange","onClick","useKeyPress","targetKey","React","keyPressed","setKeyPressed","downHandler","useCallback","key","upHandler","Items","bandage","close","label","stack","usable","CIGARETTE","WEAPON_BOW","MOLOTOV","colorChannelMixer","colorChannelA","colorChannelB","amountToMix","colorMixer","rgbA","rgbB","r","g","COLORS","WeightBar","percent","useMemo","transition","validateMove","createAsyncThunk","rejectWithValue","dispatch","response","onDrop","getState","sourceSlot","sourceData","console","error","CONTAINER","log","targetSlot","findAvailableSlot","isEqual","canStack","buyItem","onUse","InventorySlot","setCurrentItem","useDrag","collect","canDrag","drag","useDrop","accept","isOver","drop","onBuy","canDrop","onMouseEnter","onMouseLeave","useContextMenu","show","hideAll","onContextMenu","ReactTooltip","hide","ctrlKey","altKey","opacity","border","toLocaleString","minimumFractionDigits","price","currency","src","alt","Locale","onGive","setClipboard","clipElem","document","createElement","appendChild","select","execCommand","removeChild","InventoryContext","props","handleClick","component","serial","theme","animation","onShown","setContextVisible","onHidden","ui_use","ui_give","ui_drop","startsWith","ui_copy","components","ui_removeattachments","buttons","InventoryGrid","currentItem","contextVisible","additionalMetadata","setAdditionalMetadata","isControlPressed","isCopyPressed","reduce","totalWeight","rebuild","oldMetadata","Fragment","createPortal","arrowColor","place","delayShow","fontSize","float","borderBottom","marginBottom","description","ui_durability","trunc","ammo","ui_ammo","ui_serial","ui_components","array","weapontint","ui_tint","keys","Fade","visible","children","InfoScreen","infoVisible","setInfoVisible","icon","faTimes","ui_usefulcontrols","ui_rmb","ui_ctrl_lmb","ui_shift_drag","ui_ctrl_shift_lmb","ui_alt_lmb","ui_ctrl_c","InventoryControl","margin","paddingLeft","paddingRight","InventoryHotbar","hotbarVisible","setHotbarVisible","handle","setHandle","clearTimeout","Inventory","inventoryVisible","setInventoryVisible","slice","App","locale","entries","manager","useDragDropManager","ItemNotificationsContext","createContext","ItemNotification","forwardRef","ItemNotificationsProvider","queue","setQueue","add","createRef","notification","prevQueue","remove","Provider","TransitionGroup","CSSTransition","nodeRef","timeout","classNames","ReactDOM","render","StrictMode","DndProvider","backend","TouchBackend","options","enableMouseEvents","getElementById"],"mappings":"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","file":"static/js/main.c55cb47c.chunk.js","sourcesContent":["import { Slot } from './slot';\n\nexport enum InventoryType {\n  PLAYER = 'player',\n  SHOP = 'shop',\n  CONTAINER = 'container',\n}\n\nexport type Inventory = {\n  id: string;\n  type: string;\n  slots: number;\n  items: Slot[];\n  maxWeight?: number;\n  label?: string;\n};\n","//import { Items } from \"../store/items\";\nimport { Inventory, State, Slot, SlotWithItem, InventoryType, ItemData } from '../typings';\nimport { isEqual } from 'lodash';\n\nexport const isSlotWithItem = (slot: Slot, strict: boolean = false): slot is SlotWithItem =>\n  (slot.name !== undefined && slot.weight !== undefined) ||\n  (strict && slot.name !== undefined && slot.count !== undefined && slot.weight !== undefined);\n\nexport const canStack = (sourceSlot: Slot, targetSlot: Slot) =>\n  sourceSlot.name === targetSlot.name && isEqual(sourceSlot.metadata, targetSlot.metadata);\n\nexport const findAvailableSlot = (item: Slot, data: ItemData, items: Slot[]) => {\n  if (!data.stack) return items.find((target) => target.name === undefined);\n\n  const stackableSlot = items.find(\n    (target) => target.name === item.name && target.metadata === item.metadata\n  );\n\n  return stackableSlot || items.find((target) => target.name === undefined);\n};\n\nexport const getTargetInventory = (\n  state: State,\n  sourceType: Inventory['type'],\n  targetType?: Inventory['type']\n): { sourceInventory: Inventory; targetInventory: Inventory } => ({\n  sourceInventory: sourceType === InventoryType.PLAYER ? state.leftInventory : state.rightInventory,\n  targetInventory: targetType\n    ? targetType === InventoryType.PLAYER\n      ? state.leftInventory\n      : state.rightInventory\n    : sourceType === InventoryType.PLAYER\n    ? state.rightInventory\n    : state.leftInventory,\n});\n\nexport const itemDurability = (metadata: any, curTime: number) => {\n  // sorry dunak\n  // it's ok linden i fix inventory\n  if (metadata?.durability === undefined) return;\n\n  let durability = metadata.durability;\n\n  if (durability > 100 && metadata.degrade)\n    durability = ((metadata.durability - curTime) / (60 * metadata.degrade)) * 100;\n\n  if (durability < 0) durability = 0;\n\n  return durability;\n};\n\nexport const getTotalWeight = (items: Inventory['items']) =>\n  items.reduce(\n    (totalWeight, slot) => (isSlotWithItem(slot) ? totalWeight + slot.weight : totalWeight),\n    0\n  );\n\nexport const isContainer = (inventory: Inventory) => inventory.type === InventoryType.CONTAINER;\n","import {\n  createSlice,\n  current,\n  isFulfilled,\n  isPending,\n  isRejected,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport type { RootState } from '.';\nimport { State } from '../typings';\nimport {\n  setupInventoryReducer,\n  refreshSlotsReducer,\n  stackSlotsReducer,\n  swapSlotsReducer,\n  moveSlotsReducer,\n} from '../reducers';\n\nconst initialState: State = {\n  leftInventory: {\n    id: '',\n    type: '',\n    slots: 0,\n    maxWeight: 0,\n    items: [],\n  },\n  rightInventory: {\n    id: '',\n    type: '',\n    slots: 0,\n    maxWeight: 0,\n    items: [],\n  },\n  itemAmount: 0,\n  shiftPressed: false,\n  isBusy: false,\n};\n\nexport const inventorySlice = createSlice({\n  name: 'inventory',\n  initialState,\n  reducers: {\n    stackSlots: stackSlotsReducer,\n    swapSlots: swapSlotsReducer,\n    setupInventory: setupInventoryReducer,\n    moveSlots: moveSlotsReducer,\n    refreshSlots: refreshSlotsReducer,\n    setItemAmount: (state, action: PayloadAction<number>) => {\n      state.itemAmount = action.payload;\n    },\n    setShiftPressed: (state, action: PayloadAction<boolean>) => {\n      state.shiftPressed = action.payload;\n    },\n    setContainerWeight: (state, action: PayloadAction<number>) => {\n      const container = state.leftInventory.items.find(\n        (item) => item.metadata?.container === state.rightInventory.id\n      );\n\n      if (!container) return;\n\n      container.weight = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(isPending, (state) => {\n      state.isBusy = true;\n\n      state.history = {\n        leftInventory: current(state.leftInventory),\n        rightInventory: current(state.rightInventory),\n      };\n    });\n    builder.addMatcher(isFulfilled, (state) => {\n      state.isBusy = false;\n    });\n    builder.addMatcher(isRejected, (state) => {\n      if (state.history && state.history.leftInventory && state.history.rightInventory) {\n        state.leftInventory = state.history.leftInventory;\n        state.rightInventory = state.history.rightInventory;\n      }\n      state.isBusy = false;\n    });\n  },\n});\n\nexport const {\n  setItemAmount,\n  setShiftPressed,\n  setupInventory,\n  swapSlots,\n  moveSlots,\n  stackSlots,\n  refreshSlots,\n  setContainerWeight,\n} = inventorySlice.actions;\nexport const selectLeftInventory = (state: RootState) => state.inventory.leftInventory;\nexport const selectRightInventory = (state: RootState) => state.inventory.rightInventory;\nexport const selectItemAmount = (state: RootState) => state.inventory.itemAmount;\nexport const selectIsBusy = (state: RootState) => state.inventory.isBusy;\n\nexport default inventorySlice.reducer;\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory } from '../helpers';\nimport { Inventory, State, SlotWithItem, InventoryType } from '../typings';\n\nexport const stackSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: SlotWithItem;\n    toType: Inventory['type'];\n    count: number;\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\n\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n\n  const pieceWeight = fromSlot.weight / fromSlot.count;\n\n  targetInventory.items[toSlot.slot - 1] = {\n    ...targetInventory.items[toSlot.slot - 1],\n    count: toSlot.count + count,\n    weight: pieceWeight * (toSlot.count + count),\n  };\n\n  if (fromType === InventoryType.SHOP) return;\n\n  sourceInventory.items[fromSlot.slot - 1] =\n    fromSlot.count - count > 0\n      ? {\n          ...sourceInventory.items[fromSlot.slot - 1],\n          count: fromSlot.count - count,\n          weight: pieceWeight * (fromSlot.count - count),\n        }\n      : {\n          slot: fromSlot.slot,\n        };\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory, itemDurability } from '../helpers';\nimport { Inventory, SlotWithItem, State } from '../typings';\n\nexport const swapSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: SlotWithItem;\n    toType: Inventory['type'];\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType } = action.payload;\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n  const curTime = Math.floor(Date.now() / 1000);\n\n  [sourceInventory.items[fromSlot.slot - 1], targetInventory.items[toSlot.slot - 1]] = [\n    {\n      ...targetInventory.items[toSlot.slot - 1],\n      slot: fromSlot.slot,\n      durability: itemDurability(toSlot.metadata, curTime),\n    },\n    {\n      ...sourceInventory.items[fromSlot.slot - 1],\n      slot: toSlot.slot,\n      durability: itemDurability(fromSlot.metadata, curTime),\n    },\n  ];\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { itemDurability } from '../helpers';\nimport { Inventory, State } from '../typings';\n\nexport const setupInventoryReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    leftInventory?: Inventory;\n    rightInventory?: Inventory;\n  }>\n> = (state, action) => {\n  const { leftInventory, rightInventory } = action.payload;\n  const curTime = Math.floor(Date.now() / 1000);\n\n  if (leftInventory)\n    state.leftInventory = {\n      ...leftInventory,\n      items: Array.from(Array(leftInventory.slots), (_, index) => {\n        const item = Object.values(leftInventory.items).find(\n          (item) => item?.slot === index + 1\n        ) || {\n          slot: index + 1,\n        };\n\n        item.durability = itemDurability(item.metadata, curTime);\n        return item;\n      }),\n    };\n\n  if (rightInventory)\n    state.rightInventory = {\n      ...rightInventory,\n      items: Array.from(Array(rightInventory.slots), (_, index) => {\n        const item = Object.values(rightInventory.items).find(\n          (item) => item?.slot === index + 1\n        ) || {\n          slot: index + 1,\n        };\n\n        item.durability = itemDurability(item.metadata, curTime);\n        return item;\n      }),\n    };\n\n  if (rightInventory?.type === 'admin') state.isBusy = true;\n  else state.isBusy = false;\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { getTargetInventory, itemDurability } from '../helpers';\nimport { Inventory, InventoryType, Slot, SlotWithItem, State } from '../typings';\n\nexport const moveSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<{\n    fromSlot: SlotWithItem;\n    fromType: Inventory['type'];\n    toSlot: Slot;\n    toType: Inventory['type'];\n    count: number;\n  }>\n> = (state, action) => {\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\n  const pieceWeight = fromSlot.weight / fromSlot.count;\n  const curTime = Math.floor(Date.now() / 1000);\n  const fromItem = sourceInventory.items[fromSlot.slot - 1];\n\n  targetInventory.items[toSlot.slot - 1] = {\n    ...fromItem,\n    count: count,\n    weight: pieceWeight * count,\n    slot: toSlot.slot,\n    durability: itemDurability(fromItem.metadata, curTime),\n  };\n\n  if (fromType === InventoryType.SHOP) return;\n\n  sourceInventory.items[fromSlot.slot - 1] =\n    fromSlot.count - count > 0\n      ? {\n          ...sourceInventory.items[fromSlot.slot - 1],\n          count: fromSlot.count - count,\n          weight: pieceWeight * (fromSlot.count - count),\n        }\n      : {\n          slot: fromSlot.slot,\n        };\n};\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { itemDurability } from '../helpers';\nimport { InventoryType, Slot, State } from '../typings';\n\nexport const refreshSlotsReducer: CaseReducer<\n  State,\n  PayloadAction<\n    { item: Slot; inventory?: InventoryType }[] | { item: Slot; inventory?: InventoryType }\n  >\n> = (state, action) => {\n  if (!Array.isArray(action.payload)) action.payload = [action.payload];\n  const curTime = Math.floor(Date.now() / 1000);\n\n  Object.values(action.payload)\n    .filter((data) => !!data)\n    .forEach((data) => {\n      const targetInventory = data.inventory\n        ? data.inventory !== InventoryType.PLAYER\n          ? state.rightInventory\n          : state.leftInventory\n        : state.leftInventory;\n\n      data.item.durability = itemDurability(data.item.metadata, curTime);\n      targetInventory.items[data.item.slot - 1] = data.item;\n    });\n};\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport inventoryReducer from './inventory';\n\nexport const store = configureStore({\n  reducer: {\n    inventory: inventoryReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// Will return whether the current environment is in a regular browser\n// and not CEF\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative;\n\n// Basic no operation function\nexport const noop = () => {};\n","import { MutableRefObject, useEffect, useRef } from 'react';\nimport { noop } from '../utils/misc';\n\ninterface NuiMessageData<T = unknown> {\n  action: string;\n  data: T;\n}\n\ntype NuiHandlerSignature<T> = (data: T) => void;\n\n/**\n * A hook that manage events listeners for receiving data from the client scripts\n * @param action The specific `action` that should be listened for.\n * @param handler The callback function that will handle data relayed by this hook\n *\n * @example\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\n *   // whatever logic you want\n * })\n *\n **/\n\nexport const useNuiEvent = <T = any>(action: string, handler: (data: T) => void) => {\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\n\n  // When handler value changes set mutable ref to handler val\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\n      const { action: eventAction, data } = event.data;\n\n      if (savedHandler.current) {\n        if (eventAction === action) {\n          savedHandler.current(data);\n        }\n      }\n    };\n\n    window.addEventListener('message', eventListener);\n    // Remove Event Listener on component cleanup\n    return () => window.removeEventListener('message', eventListener);\n  }, [action]);\n};\n\nexport default useNuiEvent;\n","import React, { RefObject, useRef } from 'react';\nimport { DragLayerMonitor, useDragLayer, XYCoord } from 'react-dnd';\nimport { DragSource } from '../../typings';\n\ninterface DragLayerProps {\n  data: DragSource;\n  currentOffset: XYCoord | null;\n  isDragging: boolean;\n}\n\nconst subtract = (a: XYCoord, b: XYCoord): XYCoord => {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  };\n};\n\nconst calculateParentOffset = (monitor: DragLayerMonitor): XYCoord => {\n  const client = monitor.getInitialClientOffset();\n  const source = monitor.getInitialSourceClientOffset();\n  if (client === null || source === null || client.x === undefined || client.y === undefined) {\n    return { x: 0, y: 0 };\n  }\n  return subtract(client, source);\n};\n\nexport const calculatePointerPosition = (\n  monitor: DragLayerMonitor,\n  childRef: RefObject<Element>\n): XYCoord | null => {\n  const offset = monitor.getClientOffset();\n  if (offset === null) {\n    return null;\n  }\n\n  if (!childRef.current || !childRef.current.getBoundingClientRect) {\n    return subtract(offset, calculateParentOffset(monitor));\n  }\n\n  const bb = childRef.current.getBoundingClientRect();\n  const middle = { x: bb.width / 2, y: bb.height / 2 };\n  return subtract(offset, middle);\n};\n\nconst DragPreview: React.FC = () => {\n  const element = useRef<HTMLDivElement>(null);\n\n  const { data, isDragging, currentOffset } = useDragLayer<DragLayerProps>((monitor) => ({\n    data: monitor.getItem(),\n    currentOffset: calculatePointerPosition(monitor, element),\n    isDragging: monitor.isDragging(),\n  }));\n\n  return (\n    <>\n      {isDragging && currentOffset && data.item && (\n        <div\n          ref={element}\n          className=\"drag\"\n          style={{\n            transform: `translate(${currentOffset.x}px, ${currentOffset.y}px)`,\n            backgroundImage: `url(${\n              process.env.PUBLIC_URL + `/images/${data.image || data.item.name}.png`\n            })`,\n          }}\n        ></div>\n      )}\n    </>\n  );\n};\n\nexport default DragPreview;\n","import React from 'react';\nimport { useNuiEvent } from '../../hooks/useNuiEvent';\n\nimport toast, { Toaster, ToastPosition } from 'react-hot-toast';\n\n// API - https://github.com/timolins/react-hot-toast\ninterface NotificationProps {\n  text: string;\n  type?: string;\n  position?: ToastPosition;\n  duration?: number;\n}\n\nconst Notify = (data: NotificationProps) => {\n  toast(data.text, {\n    duration: data.duration || 4000,\n    position: data.position || 'top-center',\n    style: {\n      backgroundColor:\n        data.type === undefined\n          ? 'rgb(52, 152, 219)'\n          : data.type === 'success'\n          ? 'rgb(39, 174, 96)'\n          : 'rgb(231, 76, 60)',\n    },\n  });\n};\n\nconst Notifications: React.FC = () => {\n  useNuiEvent<NotificationProps>('showNotif', (data) => {\n    Notify(data);\n  });\n\n  return (\n    <Toaster\n      toastOptions={{\n        // options defined here apply to all toasts\n        style: {\n          padding: 0,\n          borderRadius: '5px',\n          color: 'white',\n        },\n      }}\n    />\n  );\n};\n\nexport default Notifications;\nexport { Notify };\n","/**\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\n * can be extended to include AbortController if needed or if the response isn't\n * JSON. Tailor it to your needs.\n *\n * @param eventName - The endpoint eventname to target\n * @param data - Data you wish to send in the NUI Callback\n *\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\n */\n\nimport { isEnvBrowser } from './misc';\n\nconst resourceName = (window as any).GetParentResourceName\n  ? (window as any).GetParentResourceName()\n  : 'ox_inventory';\n\nexport async function fetchNui<T>(eventName: string, data?: unknown): Promise<T> {\n  if (isEnvBrowser()) return undefined as any; // HACK FOR BORING ERRORS IN DEV\n\n  try {\n    const resp = await fetch(`https://${resourceName}/${eventName}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify(data),\n    });\n\n    const respFormatted = await resp.json();\n\n    return respFormatted;\n  } catch (error) {\n    throw Error(`Failed to fetch NUI callback ${eventName}! (${error})`);\n  }\n}\n","import { useState } from 'react';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport { debugData } from '../../utils/debugData';\nimport { fetchNui } from '../../utils/fetchNui';\n\ndebugData([\n  {\n    action: 'startProgress',\n    data: {\n      text: 'Using Lockpick',\n      duration: 5000,\n    },\n  },\n]);\n\n//TODO: maybe refactor depends on lua side\n\nconst ProgressBar: React.FC = () => {\n  const [duration, setDuration] = useState(0);\n  const [isVisible, setVisible] = useState(false);\n  const [isCancelled, setCancelled] = useState(false);\n  const [text, setText] = useState('');\n\n  useNuiEvent<{ text: string; duration: number }>('startProgress', (data) => {\n    setText(data.text);\n    setDuration(data.duration);\n    setVisible(true);\n    setCancelled(false);\n  });\n\n  useNuiEvent('cancelProgress', () => {\n    setCancelled(true);\n    setTimeout(() => setVisible(false), 1750);\n  });\n\n  return (\n    <>\n      {isVisible && (\n        <div className=\"progressBar\">\n          <div\n            className={isCancelled ? 'progressBar-cancel' : 'progressBar-value'}\n            style={{ animationDuration: `${duration}ms` }}\n            onAnimationEnd={() => {\n              setVisible(false);\n              fetchNui('progressComplete');\n            }}\n          >\n            <span>{text}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProgressBar;\n","import { useEffect, useRef } from 'react';\nimport { noop } from '../utils/misc';\nimport { fetchNui } from '../utils/fetchNui';\n\ntype FrameVisibleSetter = (bool: boolean) => void;\n\nconst LISTENED_KEYS = ['Escape'];\n\n// Basic hook to listen for key presses in NUI in order to exit\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\n  const setterRef = useRef<FrameVisibleSetter>(noop);\n\n  useEffect(() => {\n    setterRef.current = visibleSetter;\n  }, [visibleSetter]);\n\n  useEffect(() => {\n    const keyHandler = (e: KeyboardEvent) => {\n      if (LISTENED_KEYS.includes(e.code)) {\n        setterRef.current(false);\n        fetchNui('exit');\n      }\n    };\n\n    window.addEventListener('keyup', keyHandler);\n\n    return () => window.removeEventListener('keyup', keyHandler);\n  }, []);\n};\n","import { useState } from 'react';\nimport { useExitListener } from '../../hooks/useExitListener';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport { fetchNui } from '../../utils/fetchNui';\n\nconst KeyboardInput: React.FC = () => {\n  const [isVisible, setVisible] = useState(false);\n  const [header, setHeader] = useState('');\n  const [inputRows, setInputRows] = useState([]);\n  const [input, setInput] = useState<string[]>([]);\n\n  useNuiEvent('openInput', (data) => {\n    setVisible(true);\n    setHeader(data.header);\n\n    setInputRows([]); // resetting data\n    setInput([]); // resetting data\n\n    setInputRows(data.rows);\n  });\n\n  useExitListener(() => {\n    setVisible(false);\n    fetchNui('inputData');\n  });\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setVisible(false);\n\n    let data: string[] | any;\n    input.length === 0 ? (data = null) : (data = input);\n    fetchNui('inputData', data);\n  };\n\n  const handleChange = (e: any, index: number) => {\n    setInput((prevInput) => {\n      prevInput[index] = e.target.value;\n      return prevInput;\n    });\n  };\n\n  return (\n    <div style={{ visibility: isVisible ? 'visible' : 'hidden' }} className=\"keyboard-container\">\n      <p className=\"keyboard-header\">{header}</p>\n      {inputRows.length > 0 &&\n        inputRows.map((row, index) => (\n          <form\n            onSubmit={(e) => handleSubmit(e)}\n            className=\"keyboard-component\"\n            key={`${row + index}`}\n          >\n            <p>{row}</p>\n            <input type=\"text\" defaultValue=\"\" onChange={(e) => handleChange(e, index)} />\n          </form>\n        ))}\n      <div className=\"keyboard-buttons-div\">\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n    </div>\n  );\n};\n\nexport default KeyboardInput;\n","import React from 'react';\n\nexport const useKeyPress = (targetKey: KeyboardEvent['key']) => {\n  const [keyPressed, setKeyPressed] = React.useState(false);\n\n  const downHandler = React.useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    },\n    [targetKey]\n  );\n\n  const upHandler = React.useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [downHandler, upHandler]);\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import { ItemData } from '../typings/item';\n\nexport const Items: {\n  [key: string]: ItemData | undefined;\n} = {\n  bandage: {\n    close: false,\n    label: 'Elixir',\n    stack: true,\n    usable: true,\n  },\n  CIGARETTE: {\n    close: false,\n    label: 'Cigarety',\n    stack: true,\n    usable: true,\n  },\n  WEAPON_BOW: {\n    close: false,\n    label: 'Luk',\n    stack: true,\n    usable: true,\n  },\n  MOLOTOV: {\n    close: false,\n    label: 'Molotov',\n    stack: true,\n    usable: true,\n  },\n  // water: {\n  //   close: false,\n  //   label: 'VODA',\n  //   stack: true,\n  //   usable: true,\n  // },\n  // burger: {\n  //   close: false,\n  //   label: 'BURGR',\n  //   stack: false,\n  //   usable: false,\n  // },\n};\n","import React from 'react';\n\nconst colorChannelMixer = (colorChannelA: number, colorChannelB: number, amountToMix: number) => {\n  let channelA = colorChannelA * amountToMix;\n  let channelB = colorChannelB * (1 - amountToMix);\n  return channelA + channelB;\n};\n\nconst colorMixer = (rgbA: number[], rgbB: number[], amountToMix: number) => {\n  let r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);\n  let g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);\n  let b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nconst COLORS = {\n  // Colors used - https://materialui.co/flatuicolors\n  primaryColor: [231, 76, 60], // Red (Pomegranate)\n  secondColor: [39, 174, 96], // Green (Nephritis)\n  accentColor: [211, 84, 0], // Orange (Oragne)\n};\n\nconst WeightBar: React.FC<{ percent: number; durability?: boolean }> = ({\n  percent,\n  durability,\n}) => {\n  const color = React.useMemo(\n    () =>\n      durability\n        ? percent < 50\n          ? colorMixer(COLORS.accentColor, COLORS.primaryColor, percent / 100)\n          : colorMixer(COLORS.secondColor, COLORS.accentColor, percent / 100)\n        : percent > 50\n        ? colorMixer(COLORS.primaryColor, COLORS.accentColor, percent / 100)\n        : colorMixer(COLORS.accentColor, COLORS.secondColor, percent / 50),\n    [durability, percent]\n  );\n\n  return (\n    <div className={durability ? 'item-durability' : 'weight-bar'}>\n      <div\n        style={{\n          visibility: percent > 0 ? 'visible' : 'hidden',\n          width: `${percent}%`,\n          backgroundColor: color,\n          transition: `background ${0.3}s ease, width ${0.3}s ease`,\n        }}\n      ></div>\n    </div>\n  );\n};\nexport default WeightBar;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { setContainerWeight } from '../store/inventory';\nimport { fetchNui } from '../utils/fetchNui';\n\nexport const validateMove = createAsyncThunk(\n  'inventory/validateMove',\n  async (\n    data: {\n      fromSlot: number;\n      fromType: string;\n      toSlot: number;\n      toType: string;\n      count: number;\n    },\n    { rejectWithValue, dispatch }\n  ) => {\n    try {\n      const response = await fetchNui<boolean | number>('swapItems', data);\n\n      if (response === false) return rejectWithValue(response);\n\n      if (typeof response === 'number') dispatch(setContainerWeight(response));\n    } catch (error) {\n      return rejectWithValue(false);\n    }\n  }\n);\n","import { isSlotWithItem, findAvailableSlot, getTargetInventory, canStack } from '../helpers';\nimport { validateMove } from '../thunks/validateItems';\nimport { store } from '../store';\nimport { DragSource, DropTarget, InventoryType, SlotWithItem } from '../typings';\nimport { moveSlots, stackSlots, swapSlots } from '../store/inventory';\nimport { Items } from '../store/items';\n\nexport const onDrop = (source: DragSource, target?: DropTarget) => {\n  const { inventory: state } = store.getState();\n\n  const { sourceInventory, targetInventory } = getTargetInventory(\n    state,\n    source.inventory,\n    target?.inventory\n  );\n\n  const sourceSlot = sourceInventory.items[source.item.slot - 1] as SlotWithItem;\n\n  const sourceData = Items[sourceSlot.name];\n\n  if (sourceData === undefined) return console.error(`${sourceSlot.name} item data undefined!`);\n\n  // If dragging from container slot\n  if (sourceSlot.metadata?.container !== undefined) {\n    // Prevent storing container in container\n    if (targetInventory.type === InventoryType.CONTAINER)\n      return console.log(`Cannot store container ${sourceSlot.name} inside another container`);\n\n    // Prevent dragging of container slot when opened\n    if (state.rightInventory.id === sourceSlot.metadata.container)\n      return console.log(`Cannot move container ${sourceSlot.name} when opened`);\n  }\n\n  const targetSlot = target\n    ? targetInventory.items[target.item.slot - 1]\n    : findAvailableSlot(sourceSlot, sourceData, targetInventory.items);\n\n  if (targetSlot === undefined) return console.error('Target slot undefined!');\n\n  // If dropping on container slot when opened\n  if (\n    targetSlot.metadata?.container !== undefined &&\n    state.rightInventory.id === targetSlot.metadata.container\n  )\n    return console.log(\n      `Cannot swap item ${sourceSlot.name} with container ${targetSlot.name} when opened`\n    );\n\n  const count =\n    state.shiftPressed && sourceSlot.count > 1 && sourceInventory.type !== 'shop'\n      ? Math.floor(sourceSlot.count / 2)\n      : state.itemAmount === 0 || state.itemAmount > sourceSlot.count\n      ? sourceSlot.count\n      : state.itemAmount;\n\n  const data = {\n    fromSlot: sourceSlot,\n    toSlot: targetSlot,\n    fromType: sourceInventory.type,\n    toType: targetInventory.type,\n    count: count,\n  };\n\n  store.dispatch(\n    validateMove({\n      ...data,\n      fromSlot: sourceSlot.slot,\n      toSlot: targetSlot.slot,\n    })\n  );\n\n  isSlotWithItem(targetSlot, true)\n    ? sourceData.stack && canStack(sourceSlot, targetSlot)\n      ? store.dispatch(\n          stackSlots({\n            ...data,\n            toSlot: targetSlot,\n          })\n        )\n      : store.dispatch(\n          swapSlots({\n            ...data,\n            toSlot: targetSlot,\n          })\n        )\n    : store.dispatch(moveSlots(data));\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchNui } from '../utils/fetchNui';\n\nexport const buyItem = createAsyncThunk(\n  'inventory/buyItem',\n  async (\n    data: {\n      fromSlot: number;\n      fromType: string;\n      toSlot: number;\n      toType: string;\n      count: number;\n    },\n    { rejectWithValue }\n  ) => {\n    try {\n      const response = await fetchNui<boolean>('buyItem', data);\n\n      if (response === false) {\n        return rejectWithValue(response);\n      }\n    } catch (error) {\n      return rejectWithValue(false);\n    }\n  }\n);\n","//import toast from \"react-hot-toast\";\nimport { fetchNui } from '../utils/fetchNui';\nimport { Slot } from '../typings';\n\nexport const onUse = (item: Slot) => {\n  //toast.success(`Use ${item.name}`);\n  fetchNui('useItem', item.slot);\n};\n","import React from 'react';\nimport { DragSource, Inventory, InventoryType, Slot, SlotWithItem } from '../../typings';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useAppSelector } from '../../store';\nimport WeightBar from '../utils/WeightBar';\nimport { onDrop } from '../../dnd/onDrop';\nimport { onBuy } from '../../dnd/onBuy';\nimport { selectIsBusy } from '../../store/inventory';\nimport { Items } from '../../store/items';\nimport { isSlotWithItem } from '../../helpers';\nimport { useContextMenu } from 'react-contexify';\nimport { onUse } from '../../dnd/onUse';\nimport ReactTooltip from 'react-tooltip';\n\ninterface SlotProps {\n  inventory: Inventory;\n  item: Slot;\n  setCurrentItem: React.Dispatch<React.SetStateAction<SlotWithItem | undefined>>;\n}\n\nconst InventorySlot: React.FC<SlotProps> = ({ inventory, item, setCurrentItem }) => {\n  const isBusy = useAppSelector(selectIsBusy);\n\n  const [{ isDragging }, drag] = useDrag<DragSource, void, { isDragging: boolean }>(\n    () => ({\n      type: 'SLOT',\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n      item: () =>\n        isSlotWithItem(item, inventory.type !== InventoryType.SHOP)\n          ? {\n              inventory: inventory.type,\n              item: {\n                name: item.name,\n                slot: item.slot,\n              },\n              image: item.metadata?.image,\n            }\n          : null,\n      canDrag: !isBusy,\n    }),\n    [isBusy, inventory, item]\n  );\n\n  const [{ isOver }, drop] = useDrop<DragSource, void, { isOver: boolean }>(\n    () => ({\n      accept: 'SLOT',\n      collect: (monitor) => ({\n        isOver: monitor.isOver(),\n      }),\n      drop: (source) =>\n        source.inventory === InventoryType.SHOP\n          ? onBuy(source, {\n              inventory: inventory.type,\n              item: {\n                slot: item.slot,\n              },\n            })\n          : onDrop(source, {\n              inventory: inventory.type,\n              item: {\n                slot: item.slot,\n              },\n            }),\n      canDrop: (source) =>\n        !isBusy &&\n        (source.item.slot !== item.slot || source.inventory !== inventory.type) &&\n        inventory.type !== InventoryType.SHOP,\n    }),\n    [isBusy, inventory, item]\n  );\n\n  const connectRef = (element: HTMLDivElement) => drag(drop(element));\n\n  const onMouseEnter = React.useCallback(\n    () => isSlotWithItem(item) && setCurrentItem(item),\n    [item, setCurrentItem]\n  );\n\n  const onMouseLeave = React.useCallback(\n    () => isSlotWithItem(item) && setCurrentItem(undefined),\n    [item, setCurrentItem]\n  );\n\n  const { show, hideAll } = useContextMenu({ id: `slot-context-${item.slot}-${item.name}` });\n\n  const handleContext = (event: React.MouseEvent<HTMLDivElement>) => {\n    !isBusy && inventory.type === 'player' && isSlotWithItem(item) && show(event);\n    setCurrentItem(undefined);\n    ReactTooltip.hide();\n  };\n\n  React.useEffect(() => {\n    hideAll();\n    //eslint-disable-next-line\n  }, [isDragging]);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (isBusy) return;\n\n    if (event.ctrlKey && isSlotWithItem(item) && inventory.type !== 'shop') {\n      onDrop({ item: item, inventory: inventory.type });\n      setCurrentItem(undefined);\n    } else if (event.altKey && isSlotWithItem(item) && inventory.type === 'player') {\n      onUse(item);\n      setCurrentItem(undefined);\n    }\n  };\n\n  return (\n    <>\n      <div\n        ref={connectRef}\n        onContextMenu={handleContext}\n        onClick={handleClick}\n        className=\"item-container\"\n        data-tip\n        data-for=\"item-tooltip\"\n        style={{\n          opacity: isDragging ? 0.4 : 1.0,\n          backgroundImage: item.metadata?.image\n            ? `url(${process.env.PUBLIC_URL + `/images/${item.metadata.image}.png`})`\n            : item.name\n            ? `url(${process.env.PUBLIC_URL + `/images/${item.name}.png`})`\n            : 'none',\n          border: isOver ? '1px dashed rgba(255,255,255,0.0)' : '1px inset rgba(0,0,0,0.0)',\n        }}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        {isSlotWithItem(item) && (\n          <>\n            <div className=\"item-count\">\n              <span>\n                {item.weight > 0\n                  ? item.weight >= 1000\n                    ? `${(item.weight / 1000).toLocaleString('en-us', {\n                        minimumFractionDigits: 2,\n                      })}kg `\n                    : `${item.weight.toLocaleString('en-us', {\n                        minimumFractionDigits: 0,\n                      })}g `\n                  : ''}\n                {/* {item.count?.toLocaleString('en-us')}x */}\n                {item.count ? item.count.toLocaleString('en-us') + `x` : ''}\n              </span>\n            </div>\n            {inventory.type !== 'shop' && item?.durability !== undefined && (\n              <WeightBar percent={item.durability} durability />\n            )}\n            {inventory.type === 'shop' && item?.price !== undefined && (\n              <>\n                {item?.currency !== 'money' &&\n                item?.currency !== 'black_money' &&\n                item.price > 0 &&\n                item?.currency ? (\n                  <div className=\"item-price\" style={{ color: '#2ECC71' }}>\n                    <img\n                      className=\"item-currency\"\n                      src={\n                        item?.currency\n                          ? `${process.env.PUBLIC_URL + `/images/${item?.currency}.png`}`\n                          : ''\n                      }\n                      alt=\"item\"\n                    ></img>\n                    {item.price}\n                  </div>\n                ) : (\n                  <>\n                    {item.price > 0 && (\n                      <div\n                        className=\"item-price\"\n                        style={{\n                          color:\n                            item.currency === 'money' || !item.currency ? '#2ECC71' : '#E74C3C',\n                        }}\n                      >\n                        ${item.price}\n                      </div>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n            <div className=\"item-label\">\n              {item.metadata?.label ? item.metadata.label : Items[item.name]?.label || item.name}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InventorySlot;\n","import { isSlotWithItem } from '../helpers';\nimport { store } from '../store';\nimport { DragSource, DropTarget } from '../typings';\nimport toast from 'react-hot-toast';\nimport { Items } from '../store/items';\nimport { buyItem } from '../thunks/buyItem';\n\nexport const onBuy = (source: DragSource, target: DropTarget) => {\n  const { inventory: state } = store.getState();\n\n  const sourceInventory = state.rightInventory;\n  const targetInventory = state.leftInventory;\n\n  const sourceSlot = sourceInventory.items[source.item.slot - 1];\n\n  if (!isSlotWithItem(sourceSlot)) throw new Error(`Item ${sourceSlot.slot} name === undefined`);\n\n  if (sourceSlot.count === 0) {\n    toast.error('Out of stock');\n    return;\n  }\n\n  const sourceData = Items[sourceSlot.name];\n\n  if (sourceData === undefined) return console.error(`Item ${sourceSlot.name} data undefined!`);\n\n  const targetSlot = targetInventory.items[target.item.slot - 1];\n\n  if (targetSlot === undefined) return console.error(`Target slot undefined`);\n\n  const count =\n    state.itemAmount !== 0\n      ? sourceSlot.count\n        ? state.itemAmount > sourceSlot.count\n          ? sourceSlot.count\n          : state.itemAmount\n        : state.itemAmount\n      : 1;\n\n  const data = {\n    fromSlot: sourceSlot,\n    toSlot: targetSlot,\n    fromType: sourceInventory.type,\n    toType: targetInventory.type,\n    count: count,\n  };\n\n  store.dispatch(\n    buyItem({\n      ...data,\n      fromSlot: sourceSlot.slot,\n      toSlot: targetSlot.slot,\n    })\n  );\n};\n","export const Locale: {\n  [key: string]: string;\n} = {};\n","import { store } from '../store';\nimport { Slot } from '../typings';\nimport { fetchNui } from '../utils/fetchNui';\n\nexport const onGive = (item: Slot) => {\n  const {\n    inventory: { itemAmount },\n  } = store.getState();\n  fetchNui('giveItem', { slot: item.slot, count: itemAmount });\n};\n","// yoinked from https://github.com/project-error/npwd/blob/d8dc5b7f47faf5fc581ffee30f31ff61d184cfe7/phone/src/os/phone/hooks/useClipboard.ts#L1\nexport const setClipboard = (value: string) => {\n    const clipElem = document.createElement('input');\n    clipElem.value = value;\n    document.body.appendChild(clipElem);\n    clipElem.select();\n    document.execCommand('copy');\n    document.body.removeChild(clipElem);\n  };","import { Menu, Item, Submenu, Separator, ItemParams } from 'react-contexify';\nimport { onUse } from '../../dnd/onUse';\nimport { onGive } from '../../dnd/onGive';\nimport 'react-contexify/dist/ReactContexify.css';\nimport { Slot } from '../../typings';\nimport { onDrop } from '../../dnd/onDrop';\nimport { Items } from '../../store/items';\nimport { fetchNui } from '../../utils/fetchNui';\nimport { Locale } from '../../store/locale';\nimport { isSlotWithItem } from '../../helpers';\nimport { setClipboard } from '../../utils/setClipboard';\n\nconst InventoryContext: React.FC<{\n  item: Slot;\n  setContextVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}> = (props) => {\n  const handleClick = ({\n    data,\n  }: ItemParams<\n    undefined,\n    { action: string; component?: string; slot?: number; serial?: string; id?: number }\n  >) => {\n    switch (data && data.action) {\n      case 'use':\n        onUse({ name: props.item.name, slot: props.item.slot });\n        break;\n      case 'give':\n        onGive({ name: props.item.name, slot: props.item.slot });\n        break;\n      case 'drop':\n        isSlotWithItem(props.item) && onDrop({ item: props.item, inventory: 'player' });\n        break;\n      case 'remove':\n        fetchNui('removeComponent', { component: data?.component, slot: data?.slot });\n        break;\n      case 'copy':\n        data?.serial && setClipboard(data.serial);\n        break;\n      case 'custom':\n        fetchNui('useButton', { id: (data?.id || 0) + 1, slot: props.item.slot });\n        break;\n    }\n  };\n\n  return (\n    <>\n      {isSlotWithItem(props.item) && (\n        <Menu\n          id={`slot-context-${props.item.slot}-${props.item.name}`}\n          theme=\"dark\"\n          animation=\"fade\"\n          onShown={() => {\n            props.setContextVisible(true);\n          }}\n          onHidden={() => {\n            props.setContextVisible(false);\n          }}\n        >\n          <Item onClick={handleClick} data={{ action: 'use' }}>\n            {Locale.ui_use}\n          </Item>\n          <Item onClick={handleClick} data={{ action: 'give' }}>\n            {Locale.ui_give}\n          </Item>\n          <Item onClick={handleClick} data={{ action: 'drop' }}>\n            {Locale.ui_drop}\n          </Item>\n          {props.item.name.startsWith('WEAPON_') && props.item.metadata?.serial && (\n            <>\n              <Separator />\n              <Item\n                onClick={handleClick}\n                data={{ action: 'copy', serial: props.item.metadata.serial }}\n              >\n                {Locale.ui_copy}\n              </Item>\n              {props.item.metadata?.components?.length > 0 && (\n                <Submenu label={Locale.ui_removeattachments}>\n                  {props.item.metadata.components.map((component: string, index: number) => (\n                    <Item\n                      key={index}\n                      onClick={handleClick}\n                      data={{ action: 'remove', component: component, slot: props.item.slot }}\n                    >\n                      {Items[component]?.label}\n                    </Item>\n                  ))}\n                </Submenu>\n              )}\n            </>\n          )}\n          {(Items[props.item.name]?.buttons?.length || 0) > 0 && (\n            <>\n              <Separator />\n              {Items[props.item.name]?.buttons?.map((label: string, index: number) => (\n                <Item\n                  key={index}\n                  onClick={handleClick}\n                  data={{ action: 'custom', id: index }}\n                >\n                  {label}\n                </Item>\n              ))}\n            </>\n          )}\n        </Menu>\n      )}\n    </>\n  );\n};\n\nexport default InventoryContext;\n","import React, { useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Items } from '../../store/items';\nimport { Inventory, SlotWithItem } from '../../typings';\nimport WeightBar from '../utils/WeightBar';\nimport InventorySlot from './InventorySlot';\nimport ReactTooltip from 'react-tooltip';\nimport { Locale } from '../../store/locale';\nimport InventoryContext from './InventoryContext';\nimport { getTotalWeight } from '../../helpers';\nimport { createPortal } from 'react-dom';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport useKeyPress from '../../hooks/useKeyPress';\nimport { setClipboard } from '../../utils/setClipboard';\nimport { debugData } from '../../utils/debugData';\n\n// debugData([\n//   {\n//     action: 'displayMetadata',\n//     data: { ['mustard']: 'Mustard', ['ketchup']: 'Ketchup' },\n//   },\n// ]);\n\nconst InventoryGrid: React.FC<{ inventory: Inventory }> = ({ inventory }) => {\n  const [currentItem, setCurrentItem] = React.useState<SlotWithItem>();\n  const [contextVisible, setContextVisible] = React.useState<boolean>(false);\n  const [additionalMetadata, setAdditionalMetadata] = React.useState<{ [key: string]: any }>({});\n\n  const isControlPressed = useKeyPress('Control');\n  const isCopyPressed = useKeyPress('c');\n\n  const weight = React.useMemo(\n    () => (inventory.maxWeight !== undefined ? getTotalWeight(inventory.items) : 0),\n    [inventory.maxWeight, inventory.items]\n  );\n\n  // Need to rebuild tooltip for items in a map\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  }, [currentItem]);\n\n  // Fixes an issue where hovering an item after exiting context menu would apply no styling\n  // But have to rehover on item to get tooltip, there's probably a better solution?\n  useEffect(() => {\n    setCurrentItem(undefined);\n  }, [contextVisible]);\n\n  useEffect(() => {\n    if (!currentItem || !isControlPressed || !isCopyPressed) return;\n    currentItem?.metadata?.serial && setClipboard(currentItem.metadata.serial);\n  }, [isControlPressed, isCopyPressed]);\n\n  useNuiEvent('setupInventory', () => {\n    setCurrentItem(undefined);\n    ReactTooltip.rebuild();\n  });\n\n  useNuiEvent<{ [key: string]: any }>('displayMetadata', (data) =>\n    setAdditionalMetadata((oldMetadata) => ({ ...oldMetadata, ...data }))\n  );\n\n  return (\n    <>\n    <div className={`column-wrapper ${inventory.type}`}>\n    {/* <div className=\"column-wrapper\"> */}\n        <div className=\"inventory-label\">\n\n          <p className='inventory-weight'>{inventory.label && `${inventory.label}`}</p>\n          \n          {inventory.maxWeight && (\n            <div className='inventory-weight'>\n              {weight / 1000}/{inventory.maxWeight / 1000}kg\n            </div>\n          )}\n        </div>\n        {/* <WeightBar percent={inventory.maxWeight ? (weight / inventory.maxWeight) * 100 : 0} /> */}\n        <div className={`inventory-grid inventory-grid-${inventory.type}`}>\n          {inventory.items.map((item) => (\n            <React.Fragment key={`grid-${inventory.id}-${item.slot}`}>\n              <InventorySlot\n                key={`${inventory.type}-${inventory.id}-${item.slot}`}\n                item={item}\n                inventory={inventory}\n                setCurrentItem={setCurrentItem}\n              />\n              {createPortal(\n                <InventoryContext\n                  item={item}\n                  setContextVisible={setContextVisible}\n                  key={`context-${item.slot}`}\n                />,\n                document.body\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n\n        {currentItem && contextVisible === false && (\n          <ReactTooltip\n            id=\"item-tooltip\"\n            className=\"item-info\"\n            arrowColor=\"transparent\"\n            place=\"right\"\n            delayShow={300}\n          >\n            <>\n              <span style={{ fontSize: '1em' }}>\n                {currentItem.metadata?.label\n                  ? currentItem.metadata.label\n                  : Items[currentItem.name]?.label || currentItem.name}\n              </span>\n              <span style={{ fontSize: '1em', float: 'right' }}>{currentItem.metadata?.type}</span>\n              <hr style={{ borderBottom: '0.3em', marginBottom: '0.3em' }}></hr>\n              {(currentItem.metadata?.description || Items[currentItem.name]?.description) && (\n                <ReactMarkdown>\n                  {currentItem.metadata?.description || Items[currentItem.name]?.description}\n                </ReactMarkdown>\n              )}\n              {currentItem?.durability !== undefined && (\n                <p>\n                  {Locale.ui_durability}: {Math.trunc(currentItem.durability)}\n                </p>\n              )}\n              {currentItem.metadata?.ammo !== undefined && (\n                <p>\n                  {Locale.ui_ammo}: {currentItem.metadata.ammo}\n                </p>\n              )}\n              {currentItem.metadata?.serial && (\n                <p>\n                  {Locale.ui_serial}: {currentItem.metadata.serial}\n                </p>\n              )}\n              {currentItem.metadata?.components && currentItem.metadata?.components[0] && (\n                <p>\n                  {Locale.ui_components}:{' '}\n                  {(currentItem.metadata?.components).map(\n                    (component: string, index: number, array: []) =>\n                      index + 1 === array.length\n                        ? Items[component]?.label\n                        : Items[component]?.label + ', '\n                  )}\n                </p>\n              )}\n              {currentItem.metadata?.weapontint && (\n                <p>\n                  {Locale.ui_tint}: {currentItem.metadata.weapontint}\n                </p>\n              )}\n              {Object.keys(additionalMetadata).map((data: string, index: number) => (\n                <React.Fragment key={`metadata-${index}`}>\n                  {currentItem.metadata && currentItem.metadata[data] && (\n                    <p>\n                      {additionalMetadata[data]}: {currentItem.metadata[data]}\n                    </p>\n                  )}\n                </React.Fragment>\n              ))}\n            </>\n          </ReactTooltip>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default InventoryGrid;\n","import React from 'react';\n\nconst Fade: React.FC<{ visible: boolean; duration?: number; className?: string }> = (props) => {\n  return (\n    <div\n      style={{\n        opacity: props.visible ? 1 : 0,\n        transition: `opacity ${props.duration || 0.2}s ease-out`,\n      }}\n      className={props.className}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Fade;\n","import React, { useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { selectItemAmount, setItemAmount } from '../../store/inventory';\nimport { DragSource } from '../../typings';\nimport { onUse } from '../../dnd/onUse';\nimport { onGive } from '../../dnd/onGive';\nimport { fetchNui } from '../../utils/fetchNui';\nimport { faInfoCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Fade from '../utils/Fade';\nimport { Notify } from '../utils/Notifications';\nimport { Locale } from '../../store/locale';\n\nconst InfoScreen: React.FC<{\n  infoVisible: boolean;\n  setInfoVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}> = ({ infoVisible, setInfoVisible }) => {\n  return (\n    <div className=\"info-main\" style={{ visibility: infoVisible ? 'visible' : 'hidden' }}>\n      <FontAwesomeIcon\n        icon={faTimes}\n        onClick={() => setInfoVisible(false)}\n        className=\"info-exit-icon\"\n      />\n      <h2>{Locale.ui_usefulcontrols}</h2>\n      <p>[RMB] - {Locale.ui_rmb}</p>\n      <p>[CTRL + LMB] - {Locale.ui_ctrl_lmb}</p>\n      <p>[SHIFT + Drag] - {Locale.ui_shift_drag}</p>\n      <p>[CTRL + SHIFT + LMB] - {Locale.ui_ctrl_shift_lmb}</p>\n      <p>[ALT + LMB] - {Locale.ui_alt_lmb}</p>\n      <p>[CTRL + C] - {Locale.ui_ctrl_c}</p>\n      <span\n        className=\"info-ox\"\n        onClick={() => Notify({ text: 'Made with 🐂 by the Overextended team' })}\n      >\n        🐂\n      </span>\n    </div>\n  );\n};\n\nconst InventoryControl: React.FC = () => {\n  const itemAmount = useAppSelector(selectItemAmount);\n  const dispatch = useAppDispatch();\n\n  const [infoVisible, setInfoVisible] = useState(false);\n\n  const [, use] = useDrop<DragSource, void, any>(() => ({\n    accept: 'SLOT',\n    drop: (source) => {\n      source.inventory === 'player' && onUse(source.item);\n    },\n  }));\n\n  const [, give] = useDrop<DragSource, void, any>(() => ({\n    accept: 'SLOT',\n    drop: (source) => {\n      source.inventory === 'player' && onGive(source.item);\n    },\n  }));\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (\n      event.target.valueAsNumber % 1 !== 0 ||\n      isNaN(event.target.valueAsNumber) ||\n      event.target.valueAsNumber < 0\n    )\n      event.target.valueAsNumber = 0;\n    dispatch(setItemAmount(event.target.valueAsNumber));\n  };\n\n  return (\n    <>\n      <Fade visible={infoVisible} duration={0.25} className=\"info-fade\">\n        <InfoScreen infoVisible={infoVisible} setInfoVisible={setInfoVisible} />\n      </Fade>\n      <div className=\"column-wrapper\" style={{ margin: '5vh', paddingLeft: '5%', paddingRight: '5%' }}>\n        {/* <input\n          type=\"number\"\n          className=\"button input\"\n          min={0}\n          defaultValue={itemAmount}\n          onChange={inputHandler}\n        />\n        <button ref={use} className=\"button\">\n          {Locale.ui_use || 'Použít'}\n        </button>\n        <button ref={give} className=\"button\">\n          {Locale.ui_give || 'Darovat'}\n        </button>\n        <button className=\"button\" onClick={() => fetchNui('exit')}>\n          {Locale.ui_close || 'Zavřít'}\n        </button>\n        <div className=\"misc-btns\">\n          <button onClick={() => setInfoVisible(true)}>\n            <FontAwesomeIcon icon={faInfoCircle} />\n          </button>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default InventoryControl;\n","import { useState } from 'react';\nimport { isSlotWithItem } from '../../helpers';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport { Items } from '../../store/items';\nimport { Slot } from '../../typings';\nimport Fade from '../utils/Fade';\nimport WeightBar from '../utils/WeightBar';\n\nconst InventoryHotbar: React.FC<{ items: Slot[] }> = ({ items }) => {\n  const [hotbarVisible, setHotbarVisible] = useState(false);\n\n  //stupid fix for timeout\n  const [handle, setHandle] = useState<NodeJS.Timeout>();\n  useNuiEvent('toggleHotbar', () => {\n    if (hotbarVisible) {\n      setHotbarVisible(false);\n    } else {\n      if (handle) clearTimeout(handle);\n      setHotbarVisible(true);\n      setHandle(setTimeout(() => setHotbarVisible(false), 3000));\n    }\n  });\n\n  return (\n    <div className=\"center-wrapper\">\n      <Fade visible={hotbarVisible} className=\"hotbar-grid\">\n        {items.map((item) => (\n          <div\n            className=\"item-container\"\n            style={{\n              backgroundImage: item.metadata?.image\n                ? `url(${process.env.PUBLIC_URL + `/images/${item.metadata.image}.png`})`\n                : item.name\n                ? `url(${process.env.PUBLIC_URL + `/images/${item.name}.png`})`\n                : 'none',\n            }}\n            key={`hotbar-${item.slot}`}\n          >\n            {isSlotWithItem(item) && (\n              <>\n                <div className=\"item-count\">\n                  <span>\n                    {item.weight > 0\n                      ? item.weight >= 1000\n                        ? `${(item.weight / 1000).toLocaleString('en-us', {\n                            minimumFractionDigits: 2,\n                          })}kg `\n                        : `${item.weight.toLocaleString('en-us', {\n                            minimumFractionDigits: 0,\n                          })}g `\n                      : ''}\n                    {item.count?.toLocaleString('en-us')}x\n                  </span>\n                </div>\n                {item?.durability !== undefined && (\n                  <WeightBar percent={item.durability} durability />\n                )}\n                <div className=\"item-label\">\n                  {item.metadata?.label\n                    ? item.metadata.label\n                    : Items[item.name]?.label || item.name}\n                </div>\n              </>\n            )}\n          </div>\n        ))}\n      </Fade>\n    </div>\n  );\n};\n\nexport default InventoryHotbar;\n","import React from 'react';\nimport useNuiEvent from '../../hooks/useNuiEvent';\nimport InventoryGrid from './InventoryGrid';\nimport InventoryControl from './InventoryControl';\nimport InventoryHotbar from './InventoryHotbar';\nimport Fade from '../utils/Fade';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport {\n  selectLeftInventory,\n  selectRightInventory,\n  setupInventory,\n  refreshSlots,\n} from '../../store/inventory';\nimport { useExitListener } from '../../hooks/useExitListener';\nimport ReactTooltip from 'react-tooltip';\nimport type { Inventory as InventoryProps } from '../../typings';\n\nconst Inventory: React.FC = () => {\n  const [inventoryVisible, setInventoryVisible] = React.useState(false);\n\n  useNuiEvent<boolean>('setInventoryVisible', setInventoryVisible);\n  useNuiEvent<false>('closeInventory', () => {\n    setInventoryVisible(false);\n    ReactTooltip.hide();\n  });\n  useExitListener(setInventoryVisible);\n\n  const leftInventory = useAppSelector(selectLeftInventory);\n  const rightInventory = useAppSelector(selectRightInventory);\n\n  const dispatch = useAppDispatch();\n\n  useNuiEvent<{\n    leftInventory?: InventoryProps;\n    rightInventory?: InventoryProps;\n  }>('setupInventory', (data) => {\n    dispatch(setupInventory(data));\n    !inventoryVisible && setInventoryVisible(true);\n  });\n\n  useNuiEvent('refreshSlots', (data) => dispatch(refreshSlots(data)));\n\n  return (\n    <>\n      <Fade visible={inventoryVisible} className=\"center-wrapper\">\n        <InventoryGrid inventory={leftInventory} />\n        <InventoryControl />\n        <InventoryGrid inventory={rightInventory} />\n      </Fade>\n      <InventoryHotbar items={leftInventory.items.slice(0, 5)} />\n    </>\n  );\n};\n\nexport default Inventory;\n","import React from 'react';\nimport { useAppDispatch } from '../store';\nimport useNuiEvent from '../hooks/useNuiEvent';\nimport { setShiftPressed, setupInventory } from '../store/inventory';\nimport DragPreview from './utils/DragPreview';\nimport Notifications from './utils/Notifications';\nimport ProgressBar from './utils/ProgressBar';\nimport KeyboardInput from './utils/KeyboardInput';\nimport useKeyPress from '../hooks/useKeyPress';\nimport { Items } from '../store/items';\nimport InventoryComponent from './inventory';\nimport { debugData } from '../utils/debugData';\nimport { Inventory } from '../typings';\n// import * as Sentry from '@sentry/react';\n// import { Integrations } from '@sentry/tracing';\n// import { isEnvBrowser } from '../utils/misc';\nimport { Locale } from '../store/locale';\nimport { fetchNui } from '../utils/fetchNui';\nimport { useDragDropManager } from 'react-dnd';\n\ndebugData([\n  {\n    action: 'setupInventory',\n    data: {\n      leftInventory: {\n        id: 'test',\n        type: 'player',\n        slots: 10,\n        maxWeight: 5000,\n        items: [\n          {\n            slot: 1,\n            name: 'bandage',\n            weight: 3000,\n            metadata: {\n              durability: 100,\n              description: `# Testing something  \\n**Yes**`,\n              serial: 'SUPERCOOLWATER9725',\n              mustard: '60%',\n              ketchup: '30%',\n              mayo: '10%',\n            },\n            count: 1,\n          },\n          { slot: 2, name: 'CIGARETTE', weight: 0, count: 32000 },\n          { slot: 3, name: 'WEAPON_BOW', weight: 100, count: 1 },\n          { slot: 4, name: 'MOLOTOV', weight: 100, count: 1 },\n          { slot: 5, name: 'MOLOTOV', weight: 100, count: 1 },\n        ],\n      },\n      rightInventory: {\n        id: 'shop',\n        type: 'shop',\n        slots: 30,\n        items: [{ slot: 1, name: 'CIGARETTE', weight: 500 }],\n      },\n    },\n  },\n]);\n\nconst App: React.FC = () => {\n  const shiftPressed = useKeyPress('Shift');\n  const dispatch = useAppDispatch();\n\n  fetchNui('uiLoaded', {});\n\n  useNuiEvent<{\n    // sentry: boolean;\n    locale: { [key: string]: string };\n    items: typeof Items;\n    leftInventory: Inventory;\n  }>('init', ({ locale, items, leftInventory }) => {\n    // if (!process.env.IN_GAME_DEV && !isEnvBrowser())\n    //   // Sentry no longer being utilised; settings left behind for developers looking to track errors on their servers (more info later)\n    //   Sentry.init({\n    //     dsn: '',\n    //     integrations: [new Integrations.BrowserTracing()],\n    //     tracesSampleRate: 1.0,\n    //   });\n\n    for (const [name, data] of Object.entries(locale)) Locale[name] = data;\n\n    for (const [name, data] of Object.entries(items)) Items[name] = data;\n\n    dispatch(setupInventory({ leftInventory }));\n  });\n\n  //TODO: refactor\n  React.useEffect(() => {\n    dispatch(setShiftPressed(shiftPressed));\n  }, [shiftPressed, dispatch]);\n\n  const manager = useDragDropManager();\n\n  useNuiEvent('closeInventory', () => {\n    manager.dispatch({ type: 'dnd-core/END_DRAG' });\n  });\n\n  return (\n    <>\n      <KeyboardInput />\n      <DragPreview />\n      <Notifications />\n      <InventoryComponent />\n      <ProgressBar />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport useNuiEvent from '../../hooks/useNuiEvent';\n\ninterface ItemNotificationProps {\n  label: string;\n  image: string;\n  text: string;\n}\n\nexport const ItemNotificationsContext = React.createContext<{\n  add: (item: ItemNotificationProps) => void;\n} | null>(null);\n\nexport const useItemNotifications = () => {\n  const itemNotificationsContext = React.useContext(ItemNotificationsContext);\n  if (!itemNotificationsContext) throw new Error(`ItemNotificationsContext undefined`);\n  return itemNotificationsContext;\n};\n\nconst ItemNotification = React.forwardRef(\n  (props: { item: ItemNotificationProps }, ref: React.ForwardedRef<HTMLDivElement>) => {\n    return (\n      <div\n        className=\"item-notification\"\n        ref={ref}\n        style={{\n          backgroundImage:\n            `url(${process.env.PUBLIC_URL + `/images/${props.item.image}.png`})` || 'none',\n        }}\n      >\n        <div className=\"item-action\">{props.item.text}</div>\n        <div className=\"item-label\">{props.item.label}</div>\n      </div>\n    );\n  }\n);\n\nexport const ItemNotificationsProvider = ({ children }: { children: React.ReactNode }) => {\n  const [queue, setQueue] = React.useState<\n    { id: number; item: ItemNotificationProps; ref: React.RefObject<HTMLDivElement> }[]\n  >([]);\n\n  const add = (item: ItemNotificationProps) => {\n    const ref = React.createRef<HTMLDivElement>();\n    const notification = { id: Date.now(), item, ref: ref };\n\n    setQueue((prevQueue) => [notification, ...prevQueue]);\n\n    setTimeout(() => remove(notification.id), 2500);\n  };\n\n  const remove = (id: number) =>\n    setQueue((prevQueue) => prevQueue.filter((notification) => notification.id !== id));\n\n  useNuiEvent<[label: string, image: string, text: string]>('itemNotify', (data) =>\n    add({ label: data[0], image: data[1], text: data[2] })\n  );\n\n  return (\n    <ItemNotificationsContext.Provider value={{ add }}>\n      {children}\n      {createPortal(\n        <TransitionGroup className=\"item-notifications-container\">\n          {queue.map((notification) => (\n            <CSSTransition\n              key={notification.id}\n              nodeRef={notification.ref}\n              timeout={500}\n              classNames=\"item-notification\"\n            >\n              <ItemNotification item={notification.item} ref={notification.ref} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>,\n        document.body\n      )}\n    </ItemNotificationsContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport { store } from './store';\nimport App from './components/App';\nimport './index.scss';\nimport { ItemNotificationsProvider } from './components/utils/ItemNotifications';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n        <ItemNotificationsProvider>\n          <App />\n        </ItemNotificationsProvider>\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}